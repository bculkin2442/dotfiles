*javax.xml.ws.EndpointContext* *EndpointContext* EndpointContext allows multiple

public abstract class EndpointContext
  extends    |java.lang.Object|

|javax.xml.ws.EndpointContext_Description|
|javax.xml.ws.EndpointContext_Fields|
|javax.xml.ws.EndpointContext_Constructors|
|javax.xml.ws.EndpointContext_Methods|

================================================================================

*javax.xml.ws.EndpointContext_Constructors*
|javax.xml.ws.EndpointContext()|

*javax.xml.ws.EndpointContext_Methods*
|javax.xml.ws.EndpointContext.getEndpoints()|This gives list of endpoints in an

*javax.xml.ws.EndpointContext_Description*

EndpointContext allows multiple endpoints in an application to share any 
information. For example, servlet application's war may contain multiple 
endpoints and these endpoints can get addresses of each other by sharing this 
context. If multiple endpoints share different ports of a WSDL, then the 
multiple port addresses can be patched when the WSDL is accessed. It also 
allows all endpoints to share any other runtime information. 

This needs to be set by using (|javax.xml.ws.Endpoint|) before 
(|javax.xml.ws.Endpoint|) methods. 



*javax.xml.ws.EndpointContext()*

public EndpointContext()




*javax.xml.ws.EndpointContext.getEndpoints()*

public abstract |java.util.Set|<Endpoint> getEndpoints()

This gives list of endpoints in an application. For e.g in servlet container, a 
war file may contain multiple endpoints. In case of http, these endpoints are 
hosted on the same http server. 



    Returns: list of all endpoints in an application 


