*javax.security.auth.callback.ConfirmationCallback* *ConfirmationCallback*  Unde

public class ConfirmationCallback
  extends    |java.lang.Object|
  implements |javax.security.auth.callback.Callback|
             |java.io.Serializable|

|javax.security.auth.callback.ConfirmationCallback_Description|
|javax.security.auth.callback.ConfirmationCallback_Fields|
|javax.security.auth.callback.ConfirmationCallback_Constructors|
|javax.security.auth.callback.ConfirmationCallback_Methods|

================================================================================

*javax.security.auth.callback.ConfirmationCallback_Fields*
|int_javax.security.auth.callback.ConfirmationCallback.CANCEL|
|int_javax.security.auth.callback.ConfirmationCallback.ERROR|
|int_javax.security.auth.callback.ConfirmationCallback.INFORMATION|
|int_javax.security.auth.callback.ConfirmationCallback.NO|
|int_javax.security.auth.callback.ConfirmationCallback.OK|
|int_javax.security.auth.callback.ConfirmationCallback.OK_CANCEL_OPTION|
|int_javax.security.auth.callback.ConfirmationCallback.UNSPECIFIED_OPTION|
|int_javax.security.auth.callback.ConfirmationCallback.WARNING|
|int_javax.security.auth.callback.ConfirmationCallback.YES|
|int_javax.security.auth.callback.ConfirmationCallback.YES_NO_CANCEL_OPTION|
|int_javax.security.auth.callback.ConfirmationCallback.YES_NO_OPTION|

*javax.security.auth.callback.ConfirmationCallback_Constructors*
|javax.security.auth.callback.ConfirmationCallback(int,int,int)|Construct aConf
|javax.security.auth.callback.ConfirmationCallback(int,String[],int)|Construct 
|javax.security.auth.callback.ConfirmationCallback(String,int,int,int)|Construc
|javax.security.auth.callback.ConfirmationCallback(String,int,String[],int)|Con

*javax.security.auth.callback.ConfirmationCallback_Methods*
|javax.security.auth.callback.ConfirmationCallback.getDefaultOption()|Get the d
|javax.security.auth.callback.ConfirmationCallback.getMessageType()|Get the mes
|javax.security.auth.callback.ConfirmationCallback.getOptions()|Get the confirm
|javax.security.auth.callback.ConfirmationCallback.getOptionType()|Get the opti
|javax.security.auth.callback.ConfirmationCallback.getPrompt()|Get the prompt.
|javax.security.auth.callback.ConfirmationCallback.getSelectedIndex()|Get the s
|javax.security.auth.callback.ConfirmationCallback.setSelectedIndex(int)|Set th

*javax.security.auth.callback.ConfirmationCallback_Description*

Underlying security services instantiate and pass aConfirmationCallbackto 
thehandlemethod of aCallbackHandlerto ask for YES/NO, OK/CANCEL, YES/NO/CANCEL 
or other similar confirmations. 



*int_javax.security.auth.callback.ConfirmationCallback.CANCEL*

CANCEL option. 

If anoptionTypewas specified to thisConfirmationCallback, this option may be 
specified as adefaultOptionor returned as the selected index. 


*int_javax.security.auth.callback.ConfirmationCallback.ERROR*

ERROR message type. 


*int_javax.security.auth.callback.ConfirmationCallback.INFORMATION*

INFORMATION message type. 


*int_javax.security.auth.callback.ConfirmationCallback.NO*

NO option. 

If anoptionTypewas specified to thisConfirmationCallback, this option may be 
specified as adefaultOptionor returned as the selected index. 


*int_javax.security.auth.callback.ConfirmationCallback.OK*

OK option. 

If anoptionTypewas specified to thisConfirmationCallback, this option may be 
specified as adefaultOptionor returned as the selected index. 


*int_javax.security.auth.callback.ConfirmationCallback.OK_CANCEL_OPTION*

OK/CANCEL confirmation confirmation option. 

An underlying security service specifies this as theoptionTypeto 
aConfirmationCallbackconstructor if it requires a confirmation which can be 
answered with eitherOKorCANCEL. 


*int_javax.security.auth.callback.ConfirmationCallback.UNSPECIFIED_OPTION*

Unspecified option type. 

ThegetOptionTypemethod returns this value if thisConfirmationCallbackwas 
instantiated withoptionsinstead of anoptionType. 


*int_javax.security.auth.callback.ConfirmationCallback.WARNING*

WARNING message type. 


*int_javax.security.auth.callback.ConfirmationCallback.YES*

YES option. 

If anoptionTypewas specified to thisConfirmationCallback, this option may be 
specified as adefaultOptionor returned as the selected index. 


*int_javax.security.auth.callback.ConfirmationCallback.YES_NO_CANCEL_OPTION*

YES/NO/CANCEL confirmation confirmation option. 

An underlying security service specifies this as theoptionTypeto 
aConfirmationCallbackconstructor if it requires a confirmation which can be 
answered with eitherYES,NOorCANCEL. 


*int_javax.security.auth.callback.ConfirmationCallback.YES_NO_OPTION*

YES/NO confirmation option. 

An underlying security service specifies this as theoptionTypeto 
aConfirmationCallbackconstructor if it requires a confirmation which can be 
answered with eitherYESorNO. 



*javax.security.auth.callback.ConfirmationCallback(int,int,int)*

public ConfirmationCallback(
  int messageType,
  int optionType,
  int defaultOption)

Construct aConfirmationCallbackwith a message type, an option type and a 
default option. 

Underlying security services use this constructor if they require either a 
YES/NO, YES/NO/CANCEL or OK/CANCEL confirmation. 



    messageType - the message type ({@code INFORMATION}, {@code WARNING} or {@code ERROR}). 
    optionType - the option type ({@code YES_NO_OPTION}, {@code YES_NO_CANCEL_OPTION} or {@code 
       OK_CANCEL_OPTION}). 
    defaultOption - the default option from the provided optionType ({@code YES}, {@code NO}, 
       {@code CANCEL} or {@code OK}). 

*javax.security.auth.callback.ConfirmationCallback(int,String[],int)*

public ConfirmationCallback(
  int messageType,
  java.lang.String[] options,
  int defaultOption)

Construct aConfirmationCallbackwith a message type, a list of options and a 
default option. 

Underlying security services use this constructor if they require a 
confirmation different from the available preset confirmations provided (for 
example, CONTINUE/ABORT or STOP/GO). The confirmation options are listed in 
theoptionsarray, and are displayed by theCallbackHandlerimplementation in a 
manner consistent with the way preset options are displayed. 



    messageType - the message type ({@code INFORMATION}, {@code WARNING} or {@code ERROR}). 
    options - the list of confirmation options. 
    defaultOption - the default option, represented as an index into the {@code options} array. 

*javax.security.auth.callback.ConfirmationCallback(String,int,int,int)*

public ConfirmationCallback(
  java.lang.String prompt,
  int messageType,
  int optionType,
  int defaultOption)

Construct aConfirmationCallbackwith a prompt, message type, an option type and 
a default option. 

Underlying security services use this constructor if they require either a 
YES/NO, YES/NO/CANCEL or OK/CANCEL confirmation. 



    prompt - the prompt used to describe the list of options. 
    messageType - the message type ({@code INFORMATION}, {@code WARNING} or {@code ERROR}). 
    optionType - the option type ({@code YES_NO_OPTION}, {@code YES_NO_CANCEL_OPTION} or {@code 
       OK_CANCEL_OPTION}). 
    defaultOption - the default option from the provided optionType ({@code YES}, {@code NO}, 
       {@code CANCEL} or {@code OK}). 

*javax.security.auth.callback.ConfirmationCallback(String,int,String[],int)*

public ConfirmationCallback(
  java.lang.String prompt,
  int messageType,
  java.lang.String[] options,
  int defaultOption)

Construct aConfirmationCallbackwith a prompt, message type, a list of options 
and a default option. 

Underlying security services use this constructor if they require a 
confirmation different from the available preset confirmations provided (for 
example, CONTINUE/ABORT or STOP/GO). The confirmation options are listed in 
theoptionsarray, and are displayed by theCallbackHandlerimplementation in a 
manner consistent with the way preset options are displayed. 



    prompt - the prompt used to describe the list of options. 
    messageType - the message type ({@code INFORMATION}, {@code WARNING} or {@code ERROR}). 
    options - the list of confirmation options. 
    defaultOption - the default option, represented as an index into the {@code options} array. 

*javax.security.auth.callback.ConfirmationCallback.getDefaultOption()*

public int getDefaultOption()

Get the default option. 





    Returns: the default option, represented as {@code YES}, {@code NO}, {@code OK} or 
             {@code CANCEL} if an {@code optionType} was specified to the 
             constructor of this {@code ConfirmationCallback}. Otherwise, this 
             method returns the default option as an index into the {@code 
             options} array specified to the constructor of this {@code 
             ConfirmationCallback}. 

*javax.security.auth.callback.ConfirmationCallback.getMessageType()*

public int getMessageType()

Get the message type. 





    Returns: the message type ({@code INFORMATION}, {@code WARNING} or {@code ERROR}). 

*javax.security.auth.callback.ConfirmationCallback.getOptions()*

public |java.lang.String|[] getOptions()

Get the confirmation options. 





    Returns: the list of confirmation options, or null if this {@code ConfirmationCallback} 
             was instantiated with an {@code optionType} instead of {@code 
             options}. 

*javax.security.auth.callback.ConfirmationCallback.getOptionType()*

public int getOptionType()

Get the option type. 

If this method returnsUNSPECIFIED_OPTION, then thisConfirmationCallbackwas 
instantiated withoptionsinstead of anoptionType. In this case, invoke 
thegetOptionsmethod to determine which confirmation options to display. 





    Returns: the option type ({@code YES_NO_OPTION}, {@code YES_NO_CANCEL_OPTION} or {@code 
             OK_CANCEL_OPTION}), or {@code UNSPECIFIED_OPTION} if this {@code 
             ConfirmationCallback} was instantiated with {@code options} 
             instead of an {@code optionType}. 

*javax.security.auth.callback.ConfirmationCallback.getPrompt()*

public |java.lang.String| getPrompt()

Get the prompt. 





    Returns: the prompt, or null if this {@code ConfirmationCallback} was instantiated 
             without a {@code prompt}. 

*javax.security.auth.callback.ConfirmationCallback.getSelectedIndex()*

public int getSelectedIndex()

Get the selected confirmation option. 





    Returns: the selected confirmation option represented as {@code YES}, {@code NO}, {@code 
             OK} or {@code CANCEL} if an {@code optionType} was specified to 
             the constructor of this {@code ConfirmationCallback}. Otherwise, 
             this method returns the selected confirmation option as an index 
             into the {@code options} array specified to the constructor of 
             this {@code ConfirmationCallback}. 

*javax.security.auth.callback.ConfirmationCallback.setSelectedIndex(int)*

public void setSelectedIndex(int selection)

Set the selected confirmation option. 




    selection - the selection represented as {@code YES}, {@code NO}, {@code OK} or {@code 
       CANCEL} if an {@code optionType} was specified to the constructor of 
       this {@code ConfirmationCallback}. Otherwise, the selection represents 
       the index into the {@code options} array specified to the constructor of 
       this {@code ConfirmationCallback}. 


