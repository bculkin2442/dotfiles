*java.awt.List.AccessibleAWTList.AccessibleAWTListChild* *List.AccessibleAWTList.AccessibleAWTListChild* 

protected class List.AccessibleAWTList.AccessibleAWTListChild
  extends    |java.awt.Component.AccessibleAWTComponent|
  implements |javax.accessibility.Accessible|

|java.awt.List.AccessibleAWTList.AccessibleAWTListChild_Description|
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild_Fields|
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild_Constructors|
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild_Methods|

================================================================================

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild_Constructors*
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild(List,int)|

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild_Methods*
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.addFocusListener(FocusListener)|
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.contains(Point)|Checks 
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getAccessibleAt(Point)|
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getAccessibleChild(int)|
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getAccessibleChildrenCount()|
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getAccessibleContext()|
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getAccessibleIndexInParent()|
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getAccessibleRole()|Get
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getAccessibleStateSet()|
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getBackground()|Get the
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getBounds()|Gets the bo
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getCursor()|Get the Cur
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getFont()|Get the Font 
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getFontMetrics(Font)|Ge
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getForeground()|Get the
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getLocale()|Gets the lo
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getLocation()|Gets the 
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getLocationOnScreen()|R
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getSize()|Returns the s
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.isEnabled()|Determine i
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.isFocusTraversable()|Re
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.isShowing()|Determine i
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.isVisible()|Determine i
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.removeFocusListener(FocusListener)|
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.requestFocus()|Requests
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.setBackground(Color)|Se
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.setBounds(Rectangle)|Se
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.setCursor(Cursor)|Set t
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.setEnabled(boolean)|Set
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.setFont(Font)|Set the F
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.setForeground(Color)|Se
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.setLocation(Point)|Sets
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.setSize(Dimension)|Resi
|java.awt.List.AccessibleAWTList.AccessibleAWTListChild.setVisible(boolean)|Set

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild_Description*

This class implements accessibility support for List children. It provides an 
implementation of the Java Accessibility API appropriate to list children 
user-interface elements. 



*java.awt.List.AccessibleAWTList.AccessibleAWTListChild(List,int)*

public AccessibleAWTListChild(
  java.awt.List parent,
  int indexInParent)




*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.addFocusListener(FocusListener)*

public void addFocusListener(java.awt.event.FocusListener l)

Adds the specified focus listener to receive focus events from this component. 


    l - the focus listener 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.contains(Point)*

public boolean contains(java.awt.Point p)

Checks whether the specified point is within this object's bounds, where the 
point's x and y coordinates are defined to be relative to the coordinate system 
of the object. 


    p - the Point relative to the coordinate system of the object 

    Returns: true if object contains Point; otherwise false 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getAccessibleAt(Point)*

public |javax.accessibility.Accessible| getAccessibleAt(java.awt.Point p)

Returns the Accessible child, if one exists, contained at the local coordinate 
Point. 


    p - the point relative to the coordinate system of this object 

    Returns: the Accessible, if it exists, at the specified location; otherwise null 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getAccessibleChild(int)*

public |javax.accessibility.Accessible| getAccessibleChild(int i)

Return the specified Accessible child of the object. The Accessible children of 
an Accessible object are zero-based, so the first child of an Accessible child 
is at index 0, the second child is at index 1, and so on. 


    i - zero-based index of child 

    Returns: the Accessible child of the object 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getAccessibleChildrenCount()*

public int getAccessibleChildrenCount()

Returns the number of accessible children of the object. 



    Returns: the number of accessible children of the object. 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getAccessibleContext()*

public |javax.accessibility.AccessibleContext| getAccessibleContext()

Gets the AccessibleContext for this object. In the implementation of the Java 
Accessibility API for this class, return this object, which acts as its own 
AccessibleContext. 



    Returns: 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getAccessibleIndexInParent()*

public int getAccessibleIndexInParent()

Get the 0-based index of this object in its accessible parent. 



    Returns: the 0-based index of this object in its parent; -1 if this object does not have 
             an accessible parent. 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getAccessibleRole()*

public |javax.accessibility.AccessibleRole| getAccessibleRole()

Get the role of this object. 



    Returns: an instance of AccessibleRole describing the role of the object 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getAccessibleStateSet()*

public |javax.accessibility.AccessibleStateSet| getAccessibleStateSet()

Get the state set of this object. The AccessibleStateSet of an object is 
composed of a set of unique AccessibleState's. A change in the 
AccessibleStateSet of an object will cause a PropertyChangeEvent to be fired 
for the ACCESSIBLE_STATE_PROPERTY property. 



    Returns: an instance of AccessibleStateSet containing the current state set of the 
             object 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getBackground()*

public |java.awt.Color| getBackground()

Get the background color of this object. 



    Returns: the background color, if supported, of the object; otherwise, null 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getBounds()*

public |java.awt.Rectangle| getBounds()

Gets the bounds of this object in the form of a Rectangle object. The bounds 
specify this object's width, height, and location relative to its parent. 



    Returns: A rectangle indicating this component's bounds; null if this object is not on 
             the screen. 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getCursor()*

public |java.awt.Cursor| getCursor()

Get the Cursor of this object. 



    Returns: the Cursor, if supported, of the object; otherwise, null 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getFont()*

public |java.awt.Font| getFont()

Get the Font of this object. 



    Returns: the Font,if supported, for the object; otherwise, null 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getFontMetrics(Font)*

public |java.awt.FontMetrics| getFontMetrics(java.awt.Font f)

Get the FontMetrics of this object. 


    f - the Font 

    Returns: the FontMetrics, if supported, the object; otherwise, null 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getForeground()*

public |java.awt.Color| getForeground()

Get the foreground color of this object. 



    Returns: the foreground color, if supported, of the object; otherwise, null 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getLocale()*

public |java.util.Locale| getLocale()

Gets the locale of the component. If the component does not have a locale, then 
the locale of its parent is returned. 



    Returns: This component's locale. If this component does not have a locale, the locale 
             of its parent is returned. 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getLocation()*

public |java.awt.Point| getLocation()

Gets the location of the object relative to the parent in the form of a point 
specifying the object's top-left corner in the screen's coordinate space. 



    Returns: An instance of Point representing the top-left corner of the objects's bounds 
             in the coordinate space of the screen; null if this object or its 
             parent are not on the screen 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getLocationOnScreen()*

public |java.awt.Point| getLocationOnScreen()

Returns the location of the object on the screen. 



    Returns: location of object on screen; null if this object is not on the screen 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.getSize()*

public |java.awt.Dimension| getSize()

Returns the size of this object in the form of a Dimension object. The height 
field of the Dimension object contains this objects's height, and the width 
field of the Dimension object contains this object's width. 



    Returns: A Dimension object that indicates the size of this component; null if this 
             object is not on the screen 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.isEnabled()*

public boolean isEnabled()

Determine if the object is enabled. Objects that are enabled will also have the 
AccessibleState.ENABLED state set in their AccessibleStateSet. 



    Returns: true if object is enabled; otherwise, false 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.isFocusTraversable()*

public boolean isFocusTraversable()

Returns whether this object can accept focus or not. Objects that can accept 
focus will also have the AccessibleState.FOCUSABLE state set in their 
AccessibleStateSet. 



    Returns: true if object can accept focus; otherwise false 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.isShowing()*

public boolean isShowing()

Determine if the object is showing. This is determined by checking the 
visibility of the object and visibility of the object ancestors. Note: this 
will return true even if the object is obscured by another (for example, it to 
object is underneath a menu that was pulled down). 



    Returns: true if object is showing; otherwise, false 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.isVisible()*

public boolean isVisible()

Determine if the object is visible. Note: this means that the object intends to 
be visible; however, it may not be showing on the screen because one of the 
objects that this object is contained by is currently not visible. To determine 
if an object is showing on the screen, use isShowing(). Objects that are 
visible will also have the AccessibleState.VISIBLE state set in their 
AccessibleStateSet. 



    Returns: true if object is visible; otherwise, false 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.removeFocusListener(FocusListener)*

public void removeFocusListener(java.awt.event.FocusListener l)

Removes the specified focus listener so it no longer receives focus events from 
this component. 


    l - the focus listener 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.requestFocus()*

public void requestFocus()

Requests focus for this object. If this object cannot accept focus, nothing 
will happen. Otherwise, the object will attempt to take focus. 



*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.setBackground(Color)*

public void setBackground(java.awt.Color c)

Set the background color of this object. 


    c - the new Color for the background 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.setBounds(Rectangle)*

public void setBounds(java.awt.Rectangle r)

Sets the bounds of this object in the form of a Rectangle object. The bounds 
specify this object's width, height, and location relative to its parent. 


    r - rectangle indicating this component's bounds 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.setCursor(Cursor)*

public void setCursor(java.awt.Cursor cursor)

Set the Cursor of this object. 

The method may have no visual effect if the Java platform implementation and/or 
the native system do not support changing the mouse cursor shape. 


    cursor - the new Cursor for the object 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.setEnabled(boolean)*

public void setEnabled(boolean b)

Set the enabled state of the object. 


    b - if true, enables this object; otherwise, disables it 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.setFont(Font)*

public void setFont(java.awt.Font f)

Set the Font of this object. 


    f - the new Font for the object 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.setForeground(Color)*

public void setForeground(java.awt.Color c)

Set the foreground color of this object. 


    c - the new Color for the foreground 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.setLocation(Point)*

public void setLocation(java.awt.Point p)

Sets the location of the object relative to the parent. 


    p - the new position for the top-left corner 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.setSize(Dimension)*

public void setSize(java.awt.Dimension d)

Resizes this object so that it has width and height. 


    d - - The dimension specifying the new size of the object. 

*java.awt.List.AccessibleAWTList.AccessibleAWTListChild.setVisible(boolean)*

public void setVisible(boolean b)

Set the visible state of the object. 


    b - if true, shows this object; otherwise, hides it 


