*javax.swing.plaf.synth.SynthEditorPaneUI* *SynthEditorPaneUI* Provides the Synt

public class SynthEditorPaneUI
  extends    |javax.swing.plaf.basic.BasicEditorPaneUI|
  implements |javax.swing.plaf.synth.SynthUI|

|javax.swing.plaf.synth.SynthEditorPaneUI_Description|
|javax.swing.plaf.synth.SynthEditorPaneUI_Fields|
|javax.swing.plaf.synth.SynthEditorPaneUI_Constructors|
|javax.swing.plaf.synth.SynthEditorPaneUI_Methods|

================================================================================

*javax.swing.plaf.synth.SynthEditorPaneUI_Constructors*
|javax.swing.plaf.synth.SynthEditorPaneUI()|

*javax.swing.plaf.synth.SynthEditorPaneUI_Methods*
|javax.swing.plaf.synth.SynthEditorPaneUI.createUI(JComponent)|Creates a new UI
|javax.swing.plaf.synth.SynthEditorPaneUI.getContext(JComponent)|
|javax.swing.plaf.synth.SynthEditorPaneUI.installDefaults()|
|javax.swing.plaf.synth.SynthEditorPaneUI.paint(SynthContext,Graphics)|Paints t
|javax.swing.plaf.synth.SynthEditorPaneUI.paintBackground(Graphics)|
|javax.swing.plaf.synth.SynthEditorPaneUI.paintBorder(SynthContext,Graphics,int,int,int,int)|
|javax.swing.plaf.synth.SynthEditorPaneUI.propertyChange(PropertyChangeEvent)|T
|javax.swing.plaf.synth.SynthEditorPaneUI.uninstallDefaults()|
|javax.swing.plaf.synth.SynthEditorPaneUI.update(Graphics,JComponent)|Notifies 

*javax.swing.plaf.synth.SynthEditorPaneUI_Description*

Provides the Synth L and F UI delegate for (|javax.swing.JEditorPane|) . 



*javax.swing.plaf.synth.SynthEditorPaneUI()*

public SynthEditorPaneUI()




*javax.swing.plaf.synth.SynthEditorPaneUI.createUI(JComponent)*

public static |javax.swing.plaf.ComponentUI| createUI(javax.swing.JComponent c)

Creates a new UI object for the given component. 


    c - component to create UI object for 

    Returns: the UI object 

*javax.swing.plaf.synth.SynthEditorPaneUI.getContext(JComponent)*

public |javax.swing.plaf.synth.SynthContext| getContext(javax.swing.JComponent c)





*javax.swing.plaf.synth.SynthEditorPaneUI.installDefaults()*

protected void installDefaults()





*javax.swing.plaf.synth.SynthEditorPaneUI.paint(SynthContext,Graphics)*

protected void paint(
  javax.swing.plaf.synth.SynthContext context,
  java.awt.Graphics g)

Paints the specified component. 


    context - context for the component being painted 
    g - the {@code Graphics} object used for painting 

*javax.swing.plaf.synth.SynthEditorPaneUI.paintBackground(Graphics)*

protected void paintBackground(java.awt.Graphics g)





*javax.swing.plaf.synth.SynthEditorPaneUI.paintBorder(SynthContext,Graphics,int,int,int,int)*

public void paintBorder(
  javax.swing.plaf.synth.SynthContext context,
  java.awt.Graphics g,
  int x,
  int y,
  int w,
  int h)





*javax.swing.plaf.synth.SynthEditorPaneUI.propertyChange(PropertyChangeEvent)*

protected void propertyChange(java.beans.PropertyChangeEvent evt)

This method gets called when a bound property is changed on the associated 
JTextComponent. This is a hook which UI implementations may change to reflect 
how the UI displays bound properties of JTextComponent subclasses. This is 
implemented to rebuild the ActionMap based upon an EditorKit change. 


    evt - the property change event 

*javax.swing.plaf.synth.SynthEditorPaneUI.uninstallDefaults()*

protected void uninstallDefaults()





*javax.swing.plaf.synth.SynthEditorPaneUI.update(Graphics,JComponent)*

public void update(
  java.awt.Graphics g,
  javax.swing.JComponent c)

Notifies this UI delegate to repaint the specified component. This method 
paints the component background, then calls the 
(|javax.swing.plaf.synth.SynthEditorPaneUI|) method. 

In general, this method does not need to be overridden by subclasses. All Look 
and Feel rendering code should reside in thepaintmethod. 


    g - the {@code Graphics} object used for painting 
    c - the component being painted 


