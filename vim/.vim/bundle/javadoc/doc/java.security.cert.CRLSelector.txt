*java.security.cert.CRLSelector* *CRLSelector* A selector that defines a set of 

public interface interface CRLSelector

  implements |java.lang.Cloneable|

|java.security.cert.CRLSelector_Description|
|java.security.cert.CRLSelector_Fields|
|java.security.cert.CRLSelector_Constructors|
|java.security.cert.CRLSelector_Methods|

================================================================================

*java.security.cert.CRLSelector_Methods*
|java.security.cert.CRLSelector.clone()|Makes a copy of thisCRLSelector.
|java.security.cert.CRLSelector.match(CRL)|Decides whether aCRLshould be select

*java.security.cert.CRLSelector_Description*

A selector that defines a set of criteria for selectingCRLs. Classes that 
implement this interface are often used to specify whichCRLs should be 
retrieved from aCertStore. 

Concurrent Access 

Unless otherwise specified, the methods defined in this interface are not 
thread-safe. Multiple threads that need to access a single object concurrently 
should synchronize amongst themselves and provide the necessary locking. 
Multiple threads each manipulating separate objects need not synchronize. 



*java.security.cert.CRLSelector.clone()*

public |java.lang.Object| clone()

Makes a copy of thisCRLSelector. Changes to the copy will not affect the 
original and vice versa. 



    Returns: a copy of this {@code CRLSelector} 

*java.security.cert.CRLSelector.match(CRL)*

public boolean match(java.security.cert.CRL crl)

Decides whether aCRLshould be selected. 


    crl - the {@code CRL} to be checked 

    Returns: {@code true} if the {@code CRL} should be selected, {@code false} otherwise 


