*org.omg.DynamicAny.DynValueOperations* *DynValueOperations* DynValue objects su

public interface interface DynValueOperations

  implements |org.omg.DynamicAny.DynValueCommonOperations|

|org.omg.DynamicAny.DynValueOperations_Description|
|org.omg.DynamicAny.DynValueOperations_Fields|
|org.omg.DynamicAny.DynValueOperations_Constructors|
|org.omg.DynamicAny.DynValueOperations_Methods|

================================================================================

*org.omg.DynamicAny.DynValueOperations_Methods*
|org.omg.DynamicAny.DynValueOperations.current_member_kind()|Returns the TCKind
|org.omg.DynamicAny.DynValueOperations.current_member_name()|Returns the name o
|org.omg.DynamicAny.DynValueOperations.get_members_as_dyn_any()|Returns a seque
|org.omg.DynamicAny.DynValueOperations.get_members()|Returns a sequence of Name
|org.omg.DynamicAny.DynValueOperations.set_members_as_dyn_any(NameDynAnyPair[])|
|org.omg.DynamicAny.DynValueOperations.set_members(NameValuePair[])|Initializes

*org.omg.DynamicAny.DynValueOperations_Description*

DynValue objects support the manipulation of IDL non-boxed value types. The 
DynValue interface can represent both null and non-null value types. For a 
DynValue representing a non-null value type, the DynValue's components comprise 
the public and private members of the value type, including those inherited 
from concrete base value types, in the order of definition. A DynValue 
representing a null value type has no components and a current position of -1. 
Warning: Indiscriminantly changing the contents of private value type members 
can cause the value type implementation to break by violating internal 
constraints. Access to private members is provided to support such activities 
as ORB bridging and debugging and should not be used to arbitrarily violate the 
encapsulation of the value type. 



*org.omg.DynamicAny.DynValueOperations.current_member_kind()*

public |org.omg.CORBA.TCKind| current_member_kind()
  throws |org.omg.DynamicAny.DynAnyPackage.InvalidValue|
         |org.omg.DynamicAny.DynAnyPackage.TypeMismatch|
         
Returns the TCKind associated with the member at the current position. 



*org.omg.DynamicAny.DynValueOperations.current_member_name()*

public |java.lang.String| current_member_name()
  throws |org.omg.DynamicAny.DynAnyPackage.InvalidValue|
         |org.omg.DynamicAny.DynAnyPackage.TypeMismatch|
         
Returns the name of the member at the current position. This operation may 
return an empty string since the TypeCode of the value being manipulated may 
not contain the names of members. 



*org.omg.DynamicAny.DynValueOperations.get_members_as_dyn_any()*

public |org.omg.DynamicAny.NameDynAnyPair|[] get_members_as_dyn_any()
  throws |org.omg.DynamicAny.DynAnyPackage.InvalidValue|
         
Returns a sequence of NameDynAnyPairs describing the name and the value of each 
member in the value type. The sequence contains members in the same order as 
the declaration order of members as indicated by the DynValue's TypeCode. The 
current position is not affected. The member names in the returned sequence 
will be empty strings if the DynValue's TypeCode does not contain member names. 



*org.omg.DynamicAny.DynValueOperations.get_members()*

public |org.omg.DynamicAny.NameValuePair|[] get_members()
  throws |org.omg.DynamicAny.DynAnyPackage.InvalidValue|
         
Returns a sequence of NameValuePairs describing the name and the value of each 
member in the value type. The sequence contains members in the same order as 
the declaration order of members as indicated by the DynValue's TypeCode. The 
current position is not affected. The member names in the returned sequence 
will be empty strings if the DynValue's TypeCode does not contain member names. 



*org.omg.DynamicAny.DynValueOperations.set_members_as_dyn_any(NameDynAnyPair[])*

public void set_members_as_dyn_any(org.omg.DynamicAny.NameDynAnyPair[] value)
  throws |org.omg.DynamicAny.DynAnyPackage.InvalidValue|
         |org.omg.DynamicAny.DynAnyPackage.TypeMismatch|
         
Initializes the value type's members from a sequence of NameDynAnyPairs. The 
operation sets the current position to zero if the passed sequences has 
non-zero length. Otherwise, if an empty sequence is passed, the current 
position is set to -1. A null value type can be initialized to a non-null value 
type using this method. Members must appear in the NameDynAnyPairs in the order 
in which they appear in the IDL specification of the value type as indicated by 
the DynValue's TypeCode or they must be empty strings. The operation makes no 
attempt to assign member values based on member names. 



*org.omg.DynamicAny.DynValueOperations.set_members(NameValuePair[])*

public void set_members(org.omg.DynamicAny.NameValuePair[] value)
  throws |org.omg.DynamicAny.DynAnyPackage.InvalidValue|
         |org.omg.DynamicAny.DynAnyPackage.TypeMismatch|
         
Initializes the value type's members from a sequence of NameValuePairs. The 
operation sets the current position to zero if the passed sequences has 
non-zero length. Otherwise, if an empty sequence is passed, the current 
position is set to -1. A null value type can be initialized to a non-null value 
type using this method. Members must appear in the NameValuePairs in the order 
in which they appear in the IDL specification of the value type as indicated by 
the DynValue's TypeCode or they must be empty strings. The operation makes no 
attempt to assign member values based on member names. 




