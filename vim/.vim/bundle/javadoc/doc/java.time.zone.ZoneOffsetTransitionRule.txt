*java.time.zone.ZoneOffsetTransitionRule* *ZoneOffsetTransitionRule* A rule expr

public final class ZoneOffsetTransitionRule
  extends    |java.lang.Object|
  implements |java.io.Serializable|

|java.time.zone.ZoneOffsetTransitionRule_Description|
|java.time.zone.ZoneOffsetTransitionRule_Fields|
|java.time.zone.ZoneOffsetTransitionRule_Constructors|
|java.time.zone.ZoneOffsetTransitionRule_Methods|

================================================================================

*java.time.zone.ZoneOffsetTransitionRule_Methods*
|java.time.zone.ZoneOffsetTransitionRule.createTransition(int)|Creates a transi
|java.time.zone.ZoneOffsetTransitionRule.equals(Object)|Checks if this object e
|java.time.zone.ZoneOffsetTransitionRule.getDayOfMonthIndicator()|Gets the indi
|java.time.zone.ZoneOffsetTransitionRule.getDayOfWeek()|Gets the day-of-week of
|java.time.zone.ZoneOffsetTransitionRule.getLocalTime()|Gets the local time of 
|java.time.zone.ZoneOffsetTransitionRule.getMonth()|Gets the month of the trans
|java.time.zone.ZoneOffsetTransitionRule.getOffsetAfter()|Gets the offset after
|java.time.zone.ZoneOffsetTransitionRule.getOffsetBefore()|Gets the offset befo
|java.time.zone.ZoneOffsetTransitionRule.getStandardOffset()|Gets the standard 
|java.time.zone.ZoneOffsetTransitionRule.getTimeDefinition()|Gets the time defi
|java.time.zone.ZoneOffsetTransitionRule.hashCode()|Returns a suitable hash cod
|java.time.zone.ZoneOffsetTransitionRule.isMidnightEndOfDay()|Is the transition
|java.time.zone.ZoneOffsetTransitionRule.of(Month,int,DayOfWeek,LocalTime,boolean,ZoneOffsetTransitionRule.TimeDefinition,ZoneOffset,ZoneOffset,ZoneOffset)|
|java.time.zone.ZoneOffsetTransitionRule.toString()|Returns a string describing

*java.time.zone.ZoneOffsetTransitionRule_Description*

A rule expressing how to create a transition. 

This class allows rules for identifying future transitions to be expressed. A 
rule might be written in many forms: 

the 16th March the Sunday on or after the 16th March the Sunday on or before 
the 16th March the last Sunday in February 

These different rule types can be expressed and queried. 



*java.time.zone.ZoneOffsetTransitionRule.createTransition(int)*

public |java.time.zone.ZoneOffsetTransition| createTransition(int year)

Creates a transition instance for the specified year. 

Calculations are performed using the ISO-8601 chronology. 


    year - the year to create a transition for, not null 

    Returns: the transition instance, not null 

*java.time.zone.ZoneOffsetTransitionRule.equals(Object)*

public boolean equals(java.lang.Object otherRule)

Checks if this object equals another. 

The entire state of the object is compared. 


    otherRule - the other object to compare to, null returns false 

    Returns: true if equal 

*java.time.zone.ZoneOffsetTransitionRule.getDayOfMonthIndicator()*

public int getDayOfMonthIndicator()

Gets the indicator of the day-of-month of the transition. 

If the rule defines an exact date then the day is the month of that date. 

If the rule defines a week where the transition might occur, then the day 
defines either the start of the end of the transition week. 

If the value is positive, then it represents a normal day-of-month, and is the 
earliest possible date that the transition can be. The date may refer to 29th 
February which should be treated as 1st March in non-leap years. 

If the value is negative, then it represents the number of days back from the 
end of the month where-1is the last day of the month. In this case, the day 
identified is the latest possible date that the transition can be. 



    Returns: the day-of-month indicator, from -28 to 31 excluding 0 

*java.time.zone.ZoneOffsetTransitionRule.getDayOfWeek()*

public |java.time.DayOfWeek| getDayOfWeek()

Gets the day-of-week of the transition. 

If the rule defines an exact date then this returns null. 

If the rule defines a week where the cutover might occur, then this method 
returns the day-of-week that the month-day will be adjusted to. If the day is 
positive then the adjustment is later. If the day is negative then the 
adjustment is earlier. 



    Returns: the day-of-week that the transition occurs, null if the rule defines an exact 
             date 

*java.time.zone.ZoneOffsetTransitionRule.getLocalTime()*

public |java.time.LocalTime| getLocalTime()

Gets the local time of day of the transition which must be checked with 
(|java.time.zone.ZoneOffsetTransitionRule|) . 

The time is converted into an instant using the time definition. 



    Returns: the local time of day of the transition, not null 

*java.time.zone.ZoneOffsetTransitionRule.getMonth()*

public |java.time.Month| getMonth()

Gets the month of the transition. 

If the rule defines an exact date then the month is the month of that date. 

If the rule defines a week where the transition might occur, then the month if 
the month of either the earliest or latest possible date of the cutover. 



    Returns: the month of the transition, not null 

*java.time.zone.ZoneOffsetTransitionRule.getOffsetAfter()*

public |java.time.ZoneOffset| getOffsetAfter()

Gets the offset after the transition. 



    Returns: the offset after, not null 

*java.time.zone.ZoneOffsetTransitionRule.getOffsetBefore()*

public |java.time.ZoneOffset| getOffsetBefore()

Gets the offset before the transition. 



    Returns: the offset before, not null 

*java.time.zone.ZoneOffsetTransitionRule.getStandardOffset()*

public |java.time.ZoneOffset| getStandardOffset()

Gets the standard offset in force at the transition. 



    Returns: the standard offset, not null 

*java.time.zone.ZoneOffsetTransitionRule.getTimeDefinition()*

public |java.time.zone.ZoneOffsetTransitionRule.TimeDefinition| getTimeDefinition()

Gets the time definition, specifying how to convert the time to an instant. 

The local time can be converted to an instant using the standard offset, the 
wall offset or UTC. 



    Returns: the time definition, not null 

*java.time.zone.ZoneOffsetTransitionRule.hashCode()*

public int hashCode()

Returns a suitable hash code. 



    Returns: the hash code 

*java.time.zone.ZoneOffsetTransitionRule.isMidnightEndOfDay()*

public boolean isMidnightEndOfDay()

Is the transition local time midnight at the end of day. 

The transition may be represented as occurring at 24:00. 



    Returns: whether a local time of midnight is at the start or end of the day 

*java.time.zone.ZoneOffsetTransitionRule.of(Month,int,DayOfWeek,LocalTime,boolean,ZoneOffsetTransitionRule.TimeDefinition,ZoneOffset,ZoneOffset,ZoneOffset)*

public static |java.time.zone.ZoneOffsetTransitionRule| of(
  java.time.Month month,
  int dayOfMonthIndicator,
  java.time.DayOfWeek dayOfWeek,
  java.time.LocalTime time,
  boolean timeEndOfDay,
  java.time.zone.ZoneOffsetTransitionRule.TimeDefinition timeDefnition,
  java.time.ZoneOffset standardOffset,
  java.time.ZoneOffset offsetBefore,
  java.time.ZoneOffset offsetAfter)

Obtains an instance defining the yearly rule to create transitions between two 
offsets. 

Applications should normally obtain an instance from 
(|java.time.zone.ZoneRules|) . This factory is only intended for use when 
creating (|java.time.zone.ZoneRules|) . 


    month - the month of the month-day of the first day of the cutover week, not null 
    dayOfMonthIndicator - the day of the month-day of the cutover week, positive if the week is that day 
       or later, negative if the week is that day or earlier, counting from the 
       last day of the month, from -28 to 31 excluding 0 
    dayOfWeek - the required day-of-week, null if the month-day should not be changed 
    time - the cutover time in the 'before' offset, not null 
    timeEndOfDay - whether the time is midnight at the end of day 
    timeDefnition - how to interpret the cutover 
    standardOffset - the standard offset in force at the cutover, not null 
    offsetBefore - the offset before the cutover, not null 
    offsetAfter - the offset after the cutover, not null 

    Returns: the rule, not null 

*java.time.zone.ZoneOffsetTransitionRule.toString()*

public |java.lang.String| toString()

Returns a string describing this object. 



    Returns: a string for debugging, not null 


