*java.util.zip.ZipEntry* *ZipEntry* This class is used to represent a ZIP file e

public class ZipEntry
  extends    |java.lang.Object|
  implements |java.util.zip.ZipConstants|
             |java.lang.Cloneable|

|java.util.zip.ZipEntry_Description|
|java.util.zip.ZipEntry_Fields|
|java.util.zip.ZipEntry_Constructors|
|java.util.zip.ZipEntry_Methods|

================================================================================

*java.util.zip.ZipEntry_Fields*
|int_java.util.zip.ZipEntry.DEFLATED|
|int_java.util.zip.ZipEntry.STORED|

*java.util.zip.ZipEntry_Constructors*
|java.util.zip.ZipEntry(String)|Creates a new zip entry with the specified name
|java.util.zip.ZipEntry(ZipEntry)|Creates a new zip entry with fields taken fro

*java.util.zip.ZipEntry_Methods*
|java.util.zip.ZipEntry.clone()|Returns a copy of this entry.
|java.util.zip.ZipEntry.getComment()|Returns the comment string for the entry.
|java.util.zip.ZipEntry.getCompressedSize()|Returns the size of the compressed 
|java.util.zip.ZipEntry.getCrc()|Returns the CRC-32 checksum of the uncompresse
|java.util.zip.ZipEntry.getCreationTime()|Returns the creation time of the entr
|java.util.zip.ZipEntry.getExtra()|Returns the extra field data for the entry.
|java.util.zip.ZipEntry.getLastAccessTime()|Returns the last access time of the
|java.util.zip.ZipEntry.getLastModifiedTime()|Returns the last modification tim
|java.util.zip.ZipEntry.getMethod()|Returns the compression method of the entry
|java.util.zip.ZipEntry.getName()|Returns the name of the entry.
|java.util.zip.ZipEntry.getSize()|Returns the uncompressed size of the entry da
|java.util.zip.ZipEntry.getTime()|Returns the last modification time of the ent
|java.util.zip.ZipEntry.hashCode()|Returns the hash code value for this entry.
|java.util.zip.ZipEntry.isDirectory()|Returns true if this is a directory entry
|java.util.zip.ZipEntry.setComment(String)|Sets the optional comment string for
|java.util.zip.ZipEntry.setCompressedSize(long)|Sets the size of the compressed
|java.util.zip.ZipEntry.setCrc(long)|Sets the CRC-32 checksum of the uncompress
|java.util.zip.ZipEntry.setCreationTime(FileTime)|Sets the creation time of the
|java.util.zip.ZipEntry.setExtra(byte[])|Sets the optional extra field data for
|java.util.zip.ZipEntry.setLastAccessTime(FileTime)|Sets the last access time o
|java.util.zip.ZipEntry.setLastModifiedTime(FileTime)|Sets the last modificatio
|java.util.zip.ZipEntry.setMethod(int)|Sets the compression method for the entr
|java.util.zip.ZipEntry.setSize(long)|Sets the uncompressed size of the entry d
|java.util.zip.ZipEntry.setTime(long)|Sets the last modification time of the en
|java.util.zip.ZipEntry.toString()|Returns a string representation of the ZIP e

*java.util.zip.ZipEntry_Description*

This class is used to represent a ZIP file entry. 



*int_java.util.zip.ZipEntry.DEFLATED*

Compression method for compressed (deflated) entries. 


*int_java.util.zip.ZipEntry.STORED*

Compression method for uncompressed entries. 



*java.util.zip.ZipEntry(String)*

public ZipEntry(java.lang.String name)

Creates a new zip entry with the specified name. 

    name - The entry name 

*java.util.zip.ZipEntry(ZipEntry)*

public ZipEntry(java.util.zip.ZipEntry e)

Creates a new zip entry with fields taken from the specified zip entry. 

    e - A zip Entry object 

*java.util.zip.ZipEntry.clone()*

public |java.lang.Object| clone()

Returns a copy of this entry. 



*java.util.zip.ZipEntry.getComment()*

public |java.lang.String| getComment()

Returns the comment string for the entry. 



    Returns: the comment string for the entry, or null if none 

*java.util.zip.ZipEntry.getCompressedSize()*

public long getCompressedSize()

Returns the size of the compressed entry data. 

In the case of a stored entry, the compressed size will be the same as the 
uncompressed size of the entry. 



    Returns: the size of the compressed entry data, or -1 if not known 

*java.util.zip.ZipEntry.getCrc()*

public long getCrc()

Returns the CRC-32 checksum of the uncompressed entry data. 



    Returns: the CRC-32 checksum of the uncompressed entry data, or -1 if not known 

*java.util.zip.ZipEntry.getCreationTime()*

public |java.nio.file.attribute.FileTime| getCreationTime()

Returns the creation time of the entry. 

The creation time is from the extended timestamp fields of entry'soptional 
extra datawhen read from a ZIP file or ZIP file formatted stream. 



    Returns: the creation time of the entry, null if not specified 

*java.util.zip.ZipEntry.getExtra()*

public byte[] getExtra()

Returns the extra field data for the entry. 



    Returns: the extra field data for the entry, or null if none 

*java.util.zip.ZipEntry.getLastAccessTime()*

public |java.nio.file.attribute.FileTime| getLastAccessTime()

Returns the last access time of the entry. 

The last access time is from the extended timestamp fields of entry'soptional 
extra datawhen read from a ZIP file or ZIP file formatted stream. 



    Returns: The last access time of the entry, null if not specified 

*java.util.zip.ZipEntry.getLastModifiedTime()*

public |java.nio.file.attribute.FileTime| getLastModifiedTime()

Returns the last modification time of the entry. 

If the entry is read from a ZIP file or ZIP file formatted input stream, this 
is the last modification time from the zip file entry'soptional extra dataif 
the extended timestamp fields are present. Otherwise the last modification time 
is read from the entry'sdate and time fields, the default 
TimeZone(|java.util.TimeZone|) is used to convert the standard MS-DOS formatted 
date and time to the epoch time. 



    Returns: The last modification time of the entry, null if not specified 

*java.util.zip.ZipEntry.getMethod()*

public int getMethod()

Returns the compression method of the entry. 



    Returns: the compression method of the entry, or -1 if not specified 

*java.util.zip.ZipEntry.getName()*

public |java.lang.String| getName()

Returns the name of the entry. 



    Returns: the name of the entry 

*java.util.zip.ZipEntry.getSize()*

public long getSize()

Returns the uncompressed size of the entry data. 



    Returns: the uncompressed size of the entry data, or -1 if not known 

*java.util.zip.ZipEntry.getTime()*

public long getTime()

Returns the last modification time of the entry. 

If the entry is read from a ZIP file or ZIP file formatted input stream, this 
is the last modification time from thedate and time fieldsof the zip file 
entry. The default TimeZone(|java.util.TimeZone|) is used to convert the 
standard MS-DOS formatted date and time to the epoch time. 



    Returns: The last modification time of the entry in milliseconds since the epoch, or -1 
             if not specified 

*java.util.zip.ZipEntry.hashCode()*

public int hashCode()

Returns the hash code value for this entry. 



*java.util.zip.ZipEntry.isDirectory()*

public boolean isDirectory()

Returns true if this is a directory entry. A directory entry is defined to be 
one whose name ends with a '/'. 



    Returns: true if this is a directory entry 

*java.util.zip.ZipEntry.setComment(String)*

public void setComment(java.lang.String comment)

Sets the optional comment string for the entry. 

ZIP entry comments have maximum length of 0xffff. If the length of the 
specified comment string is greater than 0xFFFF bytes after encoding, only the 
first 0xFFFF bytes are output to the ZIP file entry. 


    comment - the comment string 

*java.util.zip.ZipEntry.setCompressedSize(long)*

public void setCompressedSize(long csize)

Sets the size of the compressed entry data. 


    csize - the compressed size to set to 

*java.util.zip.ZipEntry.setCrc(long)*

public void setCrc(long crc)

Sets the CRC-32 checksum of the uncompressed entry data. 


    crc - the CRC-32 value 

*java.util.zip.ZipEntry.setCreationTime(FileTime)*

public |java.util.zip.ZipEntry| setCreationTime(java.nio.file.attribute.FileTime time)

Sets the creation time of the entry. 

If set, the creation time will be stored into the extended timestamp fields of 
entry'soptional extra data, when output to a ZIP file or ZIP file formatted 
stream. 


    time - The creation time of the entry 

    Returns: This zip entry 

*java.util.zip.ZipEntry.setExtra(byte[])*

public void setExtra(byte[] extra)

Sets the optional extra field data for the entry. 

Invoking this method may change this entry's last modification time, last 
access time and creation time, if theextrafield data includes the extensible 
timestamp fields, such asNTFS tag 0x0001orInfo-ZIP Extended Timestamp, as 
specified in Info-ZIP Application Note 970311. 


    extra - The extra field data bytes 

*java.util.zip.ZipEntry.setLastAccessTime(FileTime)*

public |java.util.zip.ZipEntry| setLastAccessTime(java.nio.file.attribute.FileTime time)

Sets the last access time of the entry. 

If set, the last access time will be stored into the extended timestamp fields 
of entry'soptional extra data, when output to a ZIP file or ZIP file formatted 
stream. 


    time - The last access time of the entry 

    Returns: This zip entry 

*java.util.zip.ZipEntry.setLastModifiedTime(FileTime)*

public |java.util.zip.ZipEntry| setLastModifiedTime(java.nio.file.attribute.FileTime time)

Sets the last modification time of the entry. 

When output to a ZIP file or ZIP file formatted output stream the last 
modification time set by this method will be stored into zip file entry'sdate 
and time fieldsinstandard MS-DOS date and time format), and the extended 
timestamp fields inoptional extra datain UTC time. 


    time - The last modification time of the entry 

    Returns: This zip entry 

*java.util.zip.ZipEntry.setMethod(int)*

public void setMethod(int method)

Sets the compression method for the entry. 


    method - the compression method, either STORED or DEFLATED 

*java.util.zip.ZipEntry.setSize(long)*

public void setSize(long size)

Sets the uncompressed size of the entry data. 


    size - the uncompressed size in bytes 

*java.util.zip.ZipEntry.setTime(long)*

public void setTime(long time)

Sets the last modification time of the entry. 

If the entry is output to a ZIP file or ZIP file formatted output stream the 
last modification time set by this method will be stored into thedate and time 
fieldsof the zip file entry and encoded in standardMS-DOS date and time format. 
The default TimeZone(|java.util.TimeZone|) is used to convert the epoch time to 
the MS-DOS data and time. 


    time - The last modification time of the entry in milliseconds since the epoch 

*java.util.zip.ZipEntry.toString()*

public |java.lang.String| toString()

Returns a string representation of the ZIP entry. 




