*javax.security.sasl.SaslClientFactory* *SaslClientFactory* An interface for cre

public interface interface SaslClientFactory


|javax.security.sasl.SaslClientFactory_Description|
|javax.security.sasl.SaslClientFactory_Fields|
|javax.security.sasl.SaslClientFactory_Constructors|
|javax.security.sasl.SaslClientFactory_Methods|

================================================================================

*javax.security.sasl.SaslClientFactory_Methods*
|javax.security.sasl.SaslClientFactory.createSaslClient(String[],String,String,String,Map<String,?>,CallbackHandler)|
|javax.security.sasl.SaslClientFactory.getMechanismNames(Map<String,?>)|Returns

*javax.security.sasl.SaslClientFactory_Description*

An interface for creating instances ofSaslClient. A class that implements this 
interface must be thread-safe and handle multiple simultaneous requests. It 
must also have a public constructor that accepts no argument. 

This interface is not normally accessed directly by a client, which will use 
theSaslstatic methods instead. However, a particular environment may provide 
and install a new or differentSaslClientFactory. 



*javax.security.sasl.SaslClientFactory.createSaslClient(String[],String,String,String,Map<String,?>,CallbackHandler)*

public |javax.security.sasl.SaslClient| createSaslClient(
  java.lang.String[] mechanisms,
  java.lang.String authorizationId,
  java.lang.String protocol,
  java.lang.String serverName,
  java.util.Map<java.lang.String, ?> props,
  javax.security.auth.callback.CallbackHandler cbh)
  throws |javax.security.sasl.SaslException|
         
Creates a SaslClient using the parameters supplied. 


    mechanisms - The non-null list of mechanism names to try. Each is the IANA-registered name 
       of a SASL mechanism. (e.g. "GSSAPI", "CRAM-MD5"). 
    authorizationId - The possibly null protocol-dependent identification to be used for 
       authorization. If null or empty, the server derives an authorization ID 
       from the client's authentication credentials. When the SASL 
       authentication completes successfully, the specified entity is granted 
       access. 
    protocol - The non-null string name of the protocol for which the authentication is being 
       performed (e.g., "ldap"). 
    serverName - The non-null fully qualified host name of the server to authenticate to. 
    props - The possibly null set of properties used to select the SASL mechanism and to 
       configure the authentication exchange of the selected mechanism. See the 
       {@code Sasl} class for a list of standard properties. Other, possibly 
       mechanism-specific, properties can be included. Properties not relevant 
       to the selected mechanism are ignored, including any map entries with 
       non-String keys. 
    cbh - The possibly null callback handler to used by the SASL mechanisms to get 
       further information from the application/library to complete the 
       authentication. For example, a SASL mechanism might require the 
       authentication ID, password and realm from the caller. The 
       authentication ID is requested by using a {@code NameCallback}. The 
       password is requested by using a {@code PasswordCallback}. The realm is 
       requested by using a {@code RealmChoiceCallback} if there is a list of 
       realms to choose from, and by using a {@code RealmCallback} if the realm 
       must be entered. 

    Returns: A possibly null {@code SaslClient} created using the parameters supplied. If 
             null, this factory cannot produce a {@code SaslClient} using the 
             parameters supplied. 

*javax.security.sasl.SaslClientFactory.getMechanismNames(Map<String,?>)*

public |java.lang.String|[] getMechanismNames(java.util.Map<java.lang.String, ?> props)

Returns an array of names of mechanisms that match the specified mechanism 
selection policies. 


    props - The possibly null set of properties used to specify the security policy of the 
       SASL mechanisms. For example, if {@code props} contains the {@code 
       Sasl.POLICY_NOPLAINTEXT} property with the value {@code "true"}, then 
       the factory must not return any SASL mechanisms that are susceptible to 
       simple plain passive attacks. See the {@code Sasl} class for a complete 
       list of policy properties. Non-policy related properties, if present in 
       {@code props}, are ignored, including any map entries with non-String 
       keys. 

    Returns: A non-null array containing a IANA-registered SASL mechanism names. 


