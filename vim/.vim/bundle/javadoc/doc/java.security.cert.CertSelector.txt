*java.security.cert.CertSelector* *CertSelector* A selector that defines a set o

public interface interface CertSelector

  implements |java.lang.Cloneable|

|java.security.cert.CertSelector_Description|
|java.security.cert.CertSelector_Fields|
|java.security.cert.CertSelector_Constructors|
|java.security.cert.CertSelector_Methods|

================================================================================

*java.security.cert.CertSelector_Methods*
|java.security.cert.CertSelector.clone()|Makes a copy of thisCertSelector.
|java.security.cert.CertSelector.match(Certificate)|Decides whether aCertificat

*java.security.cert.CertSelector_Description*

A selector that defines a set of criteria for selectingCertificates. Classes 
that implement this interface are often used to specify whichCertificates 
should be retrieved from aCertStore. 

Concurrent Access 

Unless otherwise specified, the methods defined in this interface are not 
thread-safe. Multiple threads that need to access a single object concurrently 
should synchronize amongst themselves and provide the necessary locking. 
Multiple threads each manipulating separate objects need not synchronize. 



*java.security.cert.CertSelector.clone()*

public |java.lang.Object| clone()

Makes a copy of thisCertSelector. Changes to the copy will not affect the 
original and vice versa. 



    Returns: a copy of this {@code CertSelector} 

*java.security.cert.CertSelector.match(Certificate)*

public boolean match(java.security.cert.Certificate cert)

Decides whether aCertificateshould be selected. 


    cert - the {@code Certificate} to be checked 

    Returns: {@code true} if the {@code Certificate} should be selected, {@code false} 
             otherwise 


