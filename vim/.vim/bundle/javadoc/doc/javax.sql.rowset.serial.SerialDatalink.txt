*javax.sql.rowset.serial.SerialDatalink* *SerialDatalink* A serialized mapping i

public class SerialDatalink
  extends    |java.lang.Object|
  implements |java.io.Serializable|
             |java.lang.Cloneable|

|javax.sql.rowset.serial.SerialDatalink_Description|
|javax.sql.rowset.serial.SerialDatalink_Fields|
|javax.sql.rowset.serial.SerialDatalink_Constructors|
|javax.sql.rowset.serial.SerialDatalink_Methods|

================================================================================

*javax.sql.rowset.serial.SerialDatalink_Constructors*
|javax.sql.rowset.serial.SerialDatalink(URL)|Constructs a new SerialDatalink ob

*javax.sql.rowset.serial.SerialDatalink_Methods*
|javax.sql.rowset.serial.SerialDatalink.clone()|Returns a clone of thisSerialDa
|javax.sql.rowset.serial.SerialDatalink.equals(Object)|Compares thisSerialDatal
|javax.sql.rowset.serial.SerialDatalink.getDatalink()|Returns a new URL that is
|javax.sql.rowset.serial.SerialDatalink.hashCode()|Returns a hash code for this

*javax.sql.rowset.serial.SerialDatalink_Description*

A serialized mapping in the Java programming language of an SQL DATALINK value. 
A DATALINK value references a file outside of the underlying data source that 
the data source manages. 

RowSet implementations can use the method RowSet.getURL to retrieve a 
java.net.URL object, which can be used to manipulate the external data. 

java.net.URL url = rowset.getURL(1); 

Thread safety 

A SerialDatalink is not safe for use by multiple concurrent threads. If a 
SerialDatalink is to be used by more than one thread then access to the 
SerialDatalink should be controlled by appropriate synchronization. 



*javax.sql.rowset.serial.SerialDatalink(URL)*

public SerialDatalink(java.net.URL url)
  throws |javax.sql.rowset.serial.SerialException|
         
Constructs a new SerialDatalink object from the given java.net.URL object. 

    url - the {@code URL} to create the {@code SerialDataLink} from 

*javax.sql.rowset.serial.SerialDatalink.clone()*

public |java.lang.Object| clone()

Returns a clone of thisSerialDatalink. 



    Returns: a clone of this SerialDatalink 

*javax.sql.rowset.serial.SerialDatalink.equals(Object)*

public boolean equals(java.lang.Object obj)

Compares thisSerialDatalinkto the specified object. The result istrueif and 
only if the argument is notnulland is aSerialDatalinkobject whose URL is 
identical to this object's URL 


    obj - The object to compare this {@code SerialDatalink} against 

    Returns: {@code true} if the given object represents a {@code SerialDatalink} equivalent 
             to this SerialDatalink, {@code false} otherwise 

*javax.sql.rowset.serial.SerialDatalink.getDatalink()*

public |java.net.URL| getDatalink()
  throws |javax.sql.rowset.serial.SerialException|
         
Returns a new URL that is a copy of this SerialDatalink object. 



    Returns: a copy of this SerialDatalink object as a URL object in the Java programming 
             language. 

*javax.sql.rowset.serial.SerialDatalink.hashCode()*

public int hashCode()

Returns a hash code for thisSerialDatalink. The hash code for 
aSerialDatalinkobject is taken as the hash code of theURLit stores 



    Returns: a hash code value for this object. 


