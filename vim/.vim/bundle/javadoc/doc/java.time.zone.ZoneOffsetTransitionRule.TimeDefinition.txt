*java.time.zone.ZoneOffsetTransitionRule.TimeDefinition* *ZoneOffsetTransitionRule.TimeDefinition* 

public static final enumZoneOffsetTransitionRule.TimeDefinition
  extends    |java.lang.Enum|

|java.time.zone.ZoneOffsetTransitionRule.TimeDefinition_Description|
|java.time.zone.ZoneOffsetTransitionRule.TimeDefinition_Fields|
|java.time.zone.ZoneOffsetTransitionRule.TimeDefinition_Constructors|
|java.time.zone.ZoneOffsetTransitionRule.TimeDefinition_Methods|

================================================================================

*java.time.zone.ZoneOffsetTransitionRule.TimeDefinition_Methods*
|java.time.zone.ZoneOffsetTransitionRule.TimeDefinition.createDateTime(LocalDateTime,ZoneOffset,ZoneOffset)|
|java.time.zone.ZoneOffsetTransitionRule.TimeDefinition.valueOf(String)|
|java.time.zone.ZoneOffsetTransitionRule.TimeDefinition.values()|

*java.time.zone.ZoneOffsetTransitionRule.TimeDefinition_Description*

A definition of the way a local time can be converted to the actual transition 
date-time. 

Time zone rules are expressed in one of three ways: 

Relative to UTC Relative to the standard offset in force Relative to the wall 
offset (what you would see on a clock on the wall) 



*java.time.zone.ZoneOffsetTransitionRule.TimeDefinition.createDateTime(LocalDateTime,ZoneOffset,ZoneOffset)*

public |java.time.LocalDateTime| createDateTime(
  java.time.LocalDateTime dateTime,
  java.time.ZoneOffset standardOffset,
  java.time.ZoneOffset wallOffset)

Converts the specified local date-time to the local date-time actually seen on 
a wall clock. 

This method converts using the type of this enum. The output is defined 
relative to the 'before' offset of the transition. 

The UTC type uses the UTC offset. The STANDARD type uses the standard offset. 
The WALL type returns the input date-time. The result is intended for use with 
the wall-offset. 


    dateTime - the local date-time, not null 
    standardOffset - the standard offset, not null 
    wallOffset - the wall offset, not null 

    Returns: the date-time relative to the wall/before offset, not null 

*java.time.zone.ZoneOffsetTransitionRule.TimeDefinition.valueOf(String)*

public static |java.time.zone.ZoneOffsetTransitionRule.TimeDefinition| valueOf(java.lang.String name)





*java.time.zone.ZoneOffsetTransitionRule.TimeDefinition.values()*

public static |java.time.zone.ZoneOffsetTransitionRule.TimeDefinition|[] values()






